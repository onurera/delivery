/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaz;

/**
 *
 * @author NICOLAS
 */
import Datos.Conexion;
import javax.swing.JFrame;
import Datos.Usuarios;
import Datos.detallePedido;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
public class interazDetalleComidas extends javax.swing.JFrame {
      private Statement sentencia;
    private ResultSet rsDatos;
    private DefaultTableModel modelo;
   // private TableRowSorter trsFiltro;
    private PreparedStatement psPrepSencencias;

    /**
     * Creates new form interazDetalleComidas
     */
    public interazDetalleComidas() {
        initComponents();
          try {
              cargarTablaPedidos();
          } catch (ClassNotFoundException ex) {
              Logger.getLogger(interazDetalleComidas.class.getName()).log(Level.SEVERE, null, ex);
          } catch (SQLException ex) {
              Logger.getLogger(interazDetalleComidas.class.getName()).log(Level.SEVERE, null, ex);
          }
        this.setLocationRelativeTo(null);
    }

    private interazDetalleComidas() {
//        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jRadioButton1 = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1PedidosCocina = new javax.swing.JTable();
        jButton1ActualizarLista = new javax.swing.JButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();

        jRadioButton1.setText("jRadioButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("COCINA");

        jTable1PedidosCocina.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "IdPedido", "idCliente", "IdComida", "Descripcion", "Cantidad", "Estado", "Terminado"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1PedidosCocina);

        jButton1ActualizarLista.setText("Actualizar Lista");
        jButton1ActualizarLista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActualizarListaActionPerformed(evt);
            }
        });

        jRadioButton2.setText("Elaboracion");
        jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton2ActionPerformed(evt);
            }
        });

        jRadioButton3.setText("Cocinado");

        jButton1.setText("Salir");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel2.setText("Usuario:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jLabel4.setText("Descripcion");

        jLabel5.setText("jLabel5");

        jLabel6.setText("jLabel6");

        jLabel7.setText("jLabel7");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jButton1ActualizarLista)
                                    .addGap(292, 292, 292))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jRadioButton2)
                                    .addGap(29, 29, 29)
                                    .addComponent(jRadioButton3)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(299, 299, 299)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 201, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(25, 25, 25))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 593, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(145, 145, 145)
                .addComponent(jLabel6)
                .addGap(116, 116, 116)
                .addComponent(jLabel7)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel1)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addComponent(jButton1ActualizarLista)
                .addGap(41, 41, 41)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 76, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButton2)
                    .addComponent(jRadioButton3))
                .addGap(13, 13, 13)
                .addComponent(jButton1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActualizarListaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActualizarListaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActualizarListaActionPerformed

    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton2ActionPerformed

        
        int filaseleccionada = jTable1PedidosCocina.getSelectedRow();
         
        if(filaseleccionada >= 0){
            
        
             Connection conex;            
            try {
                conex = Conexion.Cadena();
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(interazDetalleComidas.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(interazDetalleComidas.class.getName()).log(Level.SEVERE, null, ex);
            }
            String ConsultaSQL = "SELECT * FROM Pedido WHERE estadoPedido = '"+1+"' ";
            sentencia = conex.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_READ_ONLY);
            rsDatos = sentencia.executeQuery(ConsultaSQL);
           
            // while (rsDatos.next()) 
                
            // idpedido = rsDatos.getString(1);                                          
               int idcliente= rsDatos.getInt(2);
               int terminado = rsDatos.getInt(9);
               int estado = rsDatos.getInt(10);
                         
    
        }else{
           
           JOptionPane.showMessageDialog(this,  " No Seleccionó ningun pedido", "", JOptionPane.ERROR_MESSAGE);
       }

        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(interazDetalleComidas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(interazDetalleComidas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(interazDetalleComidas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(interazDetalleComidas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new interazDetalleComidas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton1ActualizarLista;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    public javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1PedidosCocina;
    // End of variables declaration//GEN-END:variables

public void cargarTablaPedidos() throws ClassNotFoundException, SQLException {
        String idpedido;
        String cabecera[]={"idPedido","idCliente","idComida","Descripcion","Cantidad","Estado","Terminado"};
        String datos[][]={};
        DefaultTableModel modelo = new DefaultTableModel(datos,cabecera);
        jTable1PedidosCocina.setModel(modelo);
        Connection conex = Conexion.Cadena();            
            String ConsultaSQL = "SELECT * FROM Pedido WHERE estadoPedido = '"+1+"' ";
            sentencia = conex.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_READ_ONLY);
            rsDatos = sentencia.executeQuery(ConsultaSQL);
            while (rsDatos.next()) {
                
               idpedido = rsDatos.getString(1);                                          
               int idcliente= rsDatos.getInt(2);
               int terminado = rsDatos.getInt(9);
               int estado = rsDatos.getInt(10);
                         
               detallePedido DP = new detallePedido();
               ResultSet detallePedido = DP.BuscarDetalles(idpedido);
               int cantidad = detallePedido.getInt("cantidad");
               int idcomida = detallePedido.getInt("idComida");
               
               ResultSet Comida = DP.BuscarComida(idcomida);
               String descripcion = Comida.getString("descripcion");
               
              Object fila[]= {idpedido,idcliente,idcomida,descripcion,cantidad,estado,terminado}; 
              modelo.addRow(fila);
            }
////        String datos[] = new String[7];
////        DefaultTableModel dtm = (DefaultTableModel) jTable1PedidosCocina.getModel();
////        while (dtm.getRowCount() > 0) {
////            dtm.removeRow(0);
////        }
               
        /* 
        String cabecera[]={"idcadete","Nombre","Apellido","DNI","domicilio"};
        String datos[][]={};
        DefaultTableModel modelo = new DefaultTableModel(datos,cabecera);
        jTable1DatosPersonalesEmp.setModel(modelo);
        try {
            
            ResultSet cadete = CA.buscarX(Integer.parseInt(jTextField1Buscar.getText()));
           
            if( cadete.first()){
              int idcadete = cadete.getInt("idcadete");
              String nombre = cadete.getString("nombre");
              String apellido = cadete.getString("apellido");
              int doc = cadete.getInt("dni");
              String domicilio = cadete.getString("domicilio");
              Object fila[]= {idcadete,nombre,apellido,doc,domicilio};
              modelo.addRow(fila); 
        */
        
//////            Connection conex = Conexion.Cadena();            
//////            String ConsultaSQL = "SELECT * FROM Pedido WHERE estadoPedido = '"+1+"' ";
//////            sentencia = conex.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_READ_ONLY);
//////            rsDatos = sentencia.executeQuery(ConsultaSQL);
//////            while (rsDatos.next()) {
//////                idped = rsDatos.getString(1);
//////                //cargarTablaPedidos2(idped);
//////                detallePedido DP = new detallePedido();
//////                ResultSet detallePedido = DP.BuscarDetalles(idped);
//////                int cantidad = detallePedido.getInt("cantidad");
//////                
//////                         
//////                datos[0] = rsDatos.getString(1); // // PEDIDOS  -  Idpedido
//////                datos[1] = rsDatos.getString(2);//// PEDIDOS   - Icliente                          
//////                //datos[2] = rsDatos.getString(1); //COMIDA - idcomida
//////               // datos[3] = rsDatos.getString(10);  //COMIDA - descripcion
//////                datos[4] = rsDatos.getInt("cantidad");  //DETALLE PEDIDO -cantidad
//////                datos[5] = rsDatos.getString(10); //PEDIDO -estado
//////                datos[6] = rsDatos.getString(9); //PEDIDO - terminado
//////                dtm.addRow(datos);
////////                idped = rsDatos.getString(1);
////////                cargarTablaPedidos2(idped);
//////                
//////                
//////            }
//////            
//////        
}
public void cargarTablaPedidos2(String idped) throws ClassNotFoundException, SQLException {
        String idcom;
        String datos[] = new String[7];
        DefaultTableModel dtm = (DefaultTableModel) jTable1PedidosCocina.getModel();
        while (dtm.getRowCount() > 0) {
            dtm.removeRow(0);
        }
        
            Connection conex = Conexion.Cadena();            
            String ConsultaSQL = "SELECT * FROM Pedido WHERE idPedido = '"+idped+"' ";
            sentencia = conex.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_READ_ONLY);
            rsDatos = sentencia.executeQuery(ConsultaSQL);
            while (rsDatos.next()) {

               //datos[0] = rsDatos.getString(1);
               //datos[1] = rsDatos.getString(2);
                //datos[2] = "";
                datos[3] = rsDatos.getString(10); //descripcion 
                //datos[4] = rsDatos.getString(4);
               //datos[5] = rsDatos.getString(10);
               //datos[6] = rsDatos.getString(9);                
               dtm.addRow(datos);
               idcom=rsDatos.getString(1);
               cargarTablaPedidos3(idcom);
            }
            
        
} 

public void cargarTablaPedidos3(String idcom) throws ClassNotFoundException, SQLException {
        String datos[] = new String[7];
        DefaultTableModel dtm = (DefaultTableModel) jTable1PedidosCocina.getModel();
        while (dtm.getRowCount() > 0) {
            dtm.removeRow(0);
        }
        
            Connection conex = Conexion.Cadena();            
            String ConsultaSQL = "SELECT * FROM Comida WHERE idComida = '"+idcom+"' ";
            sentencia = conex.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_READ_ONLY);
            rsDatos = sentencia.executeQuery(ConsultaSQL);
            while (rsDatos.next()) {

               //datos[0] = rsDatos.getString(1);
               //datos[1] = rsDatos.getString(2);
               datos[2] = rsDatos.getString(1);
               //datos[] = "";
                //datos[3] = rsDatos.getString(10);
               datos[4] = rsDatos.getString(2);
               //datos[5] = rsDatos.getString(10);
               //datos[6] = rsDatos.getString(9);                
               dtm.addRow(datos);
            }
            
        
} 
    }