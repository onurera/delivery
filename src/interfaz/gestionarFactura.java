/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaz;

/**
 *
 * @author NICOLAS
 */
import Datos.*;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import Datos.*;
import java.sql.Date;
import java.util.Calendar;
import javax.swing.JOptionPane;
public class gestionarFactura extends javax.swing.JFrame {

    /**
     * Creates new form generarFactura
     */
    Pedido ped= new Pedido();
     emitirFacturacion datosParaFact = new emitirFacturacion();
    
     DefaultTableModel tablaPedidoAFact;
    public gestionarFactura() throws ClassNotFoundException {
        initComponents();
        this.setTitle("Gestionar Factura");
        
        try {
        String cabecera [] ={"CodigoPedido","CodigoCliente ","ImporteTotal"};
               
        tablaPedidoAFact= new DefaultTableModel ();
        jTablepedidoAFact.setModel(tablaPedidoAFact);
        tablaPedidoAFact.setColumnIdentifiers(cabecera);
               
              
        ResultSet buscarPedidos = ped.buscarActivos();
       if(buscarPedidos.first()){ 
        do{
            
    tablaPedidoAFact.addRow(new Object[]{buscarPedidos.getInt("idPedido"),buscarPedidos.getInt("idCliente"),buscarPedidos.getFloat("total")});
                     
       }while(buscarPedidos.next());
       }
         } catch (ClassNotFoundException ex) {
             Logger.getLogger(gestionarFactura.class.getName()).log(Level.SEVERE, null, ex);
         } catch (SQLException ex) {
             Logger.getLogger(gestionarFactura.class.getName()).log(Level.SEVERE, null, ex);
         }
        
        
         setLocationRelativeTo(null);
         
        
    }
     public Calendar fechayHora(){
         Calendar FechayHora= new Calendar() {

             @Override
             protected void computeTime() {
                 throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
             }

             @Override
             protected void computeFields() {
                 throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
             }

             @Override
             public void add(int i, int i1) {
                 throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
             }

             @Override
             public void roll(int i, boolean bln) {
                 throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
             }

             @Override
             public int getMinimum(int i) {
                 throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
             }

             @Override
             public int getMaximum(int i) {
                 throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
             }

             @Override
             public int getGreatestMinimum(int i) {
                 throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
             }

             @Override
             public int getLeastMaximum(int i) {
                 throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
             }
         };
        FechayHora= Calendar.getInstance();
       /* int año= FechayHora.get(Calendar.YEAR);
        int  mes = FechayHora.get(Calendar.MONTH);
        int dia = FechayHora.get(Calendar.DAY_OF_MONTH);
        int hora = FechayHora.get(Calendar.HOUR_OF_DAY);
        int minuto = FechayHora.get(Calendar.MINUTE);
        int segundo = FechayHora.get(Calendar.SECOND);
        */
        /*String fechasyhoras= ""+dia+"/"+mes+"/"+año+" "+" "+"Hora Actual: "+hora+"-"+minuto+"-"+segundo+"";*/
        return  FechayHora;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTablepedidoAFact = new javax.swing.JTable();
        jButton1Volver = new javax.swing.JButton();
        jButton2emitirFactura = new javax.swing.JButton();
        jButton1RefrescarVentana = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Seleccione Pedido");

        jTablepedidoAFact.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "codigo Pedido", "codigo Cliente", "importe Total"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.Float.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTablepedidoAFact);

        jButton1Volver.setText("Atras");
        jButton1Volver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1VolverActionPerformed(evt);
            }
        });

        jButton2emitirFactura.setText("Emitir Factura");
        jButton2emitirFactura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2emitirFacturaActionPerformed(evt);
            }
        });

        jButton1RefrescarVentana.setText("Actualizar");
        jButton1RefrescarVentana.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1RefrescarVentanaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 383, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(60, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1RefrescarVentana)
                        .addGap(91, 91, 91))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1Volver)
                .addGap(18, 18, 18)
                .addComponent(jButton2emitirFactura)
                .addGap(22, 22, 22))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jButton1RefrescarVentana))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1Volver)
                    .addComponent(jButton2emitirFactura))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
 
    
    private void jButton1RefrescarVentanaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1RefrescarVentanaActionPerformed
         try {
               
        ResultSet buscarPedidos = ped.buscarActivos();
       if(buscarPedidos.first()){ 
        do{
            
    tablaPedidoAFact.addRow(new Object[]{buscarPedidos.getInt("idPedido"),buscarPedidos.getInt("idCliente"),buscarPedidos.getFloat("total")});
                     
       }while(buscarPedidos.next());
       }
         } catch (ClassNotFoundException ex) {
             Logger.getLogger(gestionarFactura.class.getName()).log(Level.SEVERE, null, ex);
         } catch (SQLException ex) {
             Logger.getLogger(gestionarFactura.class.getName()).log(Level.SEVERE, null, ex);
         }
    }//GEN-LAST:event_jButton1RefrescarVentanaActionPerformed

    private void jButton2emitirFacturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2emitirFacturaActionPerformed

        
       Factura fact = new Factura();
       Cliente cli = new Cliente();
       Comida comida = new Comida ();
       detallePedido detallPed= new detallePedido();
       Zona zo= new Zona();
       float precio;
        int posicion = jTablepedidoAFact.getSelectedRow();
       if(posicion >=0){
           int idPed= (int)tablaPedidoAFact.getValueAt(posicion, 0);
           int idCliente = (int)tablaPedidoAFact.getValueAt(posicion, 1);
           try {
               //traigo pedido
               ResultSet traerPEdido = ped.traerPedido(idCliente, idPed);
              if(traerPEdido.first()){
                  //ponerlo dentro de un do While
               ResultSet buscdetallPed = detallPed.BuscarDetalles(idPed);
                  ResultSet buscarCli =  cli.BuscarXConId(idCliente);
               
               ResultSet obtenerCantidad= detallPed.ObtenerCantidad(idPed);
               if(buscarCli.first()){
                   datosParaFact.jTextField1ImporteTotal.setText(String.valueOf(traerPEdido.getFloat("total")));
                   datosParaFact.jTextField1NombreCliente.setText(buscarCli.getString("apellido"));
                   datosParaFact.jTextField1apellClient.setText(buscarCli.getString("nombre"));
                   datosParaFact.jTextField1Domicilio.setText(buscarCli.getString("domicilio"));
                   datosParaFact.jTextField1Telefono.setText(String.valueOf(buscarCli.getInt("telefono")));
                   fact.setIdCliente(idCliente);
                   fact.setLugarEnvio(buscarCli.getString("domicilio"));
                   fact.setTotal(traerPEdido.getFloat("total"));
                   if(buscarCli.getInt("zona")==1)
                    {
                        ResultSet buscPrecio = zo.BuscarPorZona("centrica");
                        if(buscPrecio.first()){
                            fact.setZona(1);
                            fact.setPagada(1);
                            
                           datosParaFact.jTextField1tarifaEnvio.setText(String.valueOf(buscPrecio.getFloat("precio")));
                           datosParaFact.jTextField1Zona.setText("centrica");
                            traerLosDeatlles(buscdetallPed,obtenerCantidad,comida,datosParaFact,fact);
                            
                        }
                    }
                   else
                   {
                       ResultSet buscPrecio = zo.BuscarPorZona("no centrica");
                       fact.setZona(0);
                       fact.setPagada(1);
                       datosParaFact.jTextField1tarifaEnvio.setText(String.valueOf(buscPrecio.getFloat("precio")));
                       datosParaFact.jTextField1Zona.setText("no centrica");
                       traerLosDeatlles(buscdetallPed,obtenerCantidad,comida, datosParaFact,fact);
                   datosParaFact.jTextField1tarifaEnvio.setText(String.valueOf(buscPrecio.getFloat("precio")));
                   }
               }
              }  
               
           } catch (ClassNotFoundException ex) {
               Logger.getLogger(gestionarFactura.class.getName()).log(Level.SEVERE, null, ex);
           } catch (SQLException ex) {
               Logger.getLogger(gestionarFactura.class.getName()).log(Level.SEVERE, null, ex);
           }
           
       } else {JOptionPane.showMessageDialog(null,"Selecione un pedido");
       }
    }//GEN-LAST:event_jButton2emitirFacturaActionPerformed

    private void jButton1VolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1VolverActionPerformed
            principalInterfazEncargado volverMenu = new principalInterfazEncargado();
            volverMenu.setVisible(true);
            this.setVisible(false);
            
    }//GEN-LAST:event_jButton1VolverActionPerformed
public void traerLosDeatlles(ResultSet detallePedido,ResultSet obtCant,Comida comida,emitirFacturacion datosParaFact,Factura fact) throws SQLException, ClassNotFoundException{
        int idFactura= fact.Insertar();
        detalleFactura detallFact = new detalleFactura();
        
        if(detallePedido.first()){
              if(obtCant.first()){
               do{
                ResultSet buscarComida = comida.buscarConId(detallePedido.getInt("idComida"));
                   if(buscarComida.first()){
                       do{
                          detallFact.setIdFactura(idFactura);
                          detallFact.setNumLinea(detallePedido.getInt("numLinea"));
                          detallFact.setCantidad(detallePedido.getInt("cantidad"));
                          detallFact.setIdComida(buscarComida.getInt("idComida"));
                          detallFact.Insertar();
 this.datosParaFact.tablaPedido.addRow(new Object[]{buscarComida.getInt("idComida"),buscarComida.getString("descripcion"),detallePedido.getInt("cantidad"),buscarComida.getFloat("precio"),detallePedido.getInt("cantidad")*buscarComida.getFloat("precio")});
                           
                       }while(buscarComida.next());
                          
                          
                   }
               
               }while(detallePedido.next());
              }
           }
        datosParaFact.setVisible(true);
        
}
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(gestionarFactura.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(gestionarFactura.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(gestionarFactura.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(gestionarFactura.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new gestionarFactura().setVisible(true);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(gestionarFactura.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1RefrescarVentana;
    private javax.swing.JButton jButton1Volver;
    private javax.swing.JButton jButton2emitirFactura;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTablepedidoAFact;
    // End of variables declaration//GEN-END:variables
}
